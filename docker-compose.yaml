version: "3"
services:
  mbtileserver_init:
    image: ghcr.io/headwaymaps/tileserver-init:latest
    env_file: .env
    environment:
      MBTILES_ARTIFACT_DEST_PATH: /data/${HEADWAY_AREA}.mbtiles
      MBTILES_ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.mbtiles
      NATURAL_EARTH_ARTIFACT_DEST_PATH: /data/natural_earth.mbtiles
      NATURAL_EARTH_ARTIFACT_SOURCE_PATH: /bootstrap/natural_earth.mbtiles
    volumes:
      - "./data/:/bootstrap/:ro"
      - "mbtileserver_data:/data/:rw"
  mbtileserver:
    image: ghcr.io/headwaymaps/tileserver:latest
    restart: always
    env_file: .env
    environment:
      PORT: 8000
    volumes:
      - "mbtileserver_data:/data/:ro"
    depends_on:
      mbtileserver_init:
        condition: service_completed_successfully
    ports:
      - "9000:8000"
  otp_init:
    image: ghcr.io/headwaymaps/opentripplanner-init:latest
    env_file: .env
    environment:
      ARTIFACT_DEST_PATH: /data/${HEADWAY_AREA}.graph.obj
      ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.graph.obj
    volumes:
      - "./data/:/bootstrap/:ro"
      - "otp_data:/data/:rw"
  otp:
    image: ghcr.io/headwaymaps/opentripplanner:latest
    restart: always
    env_file: .env
    volumes:
      - "otp_data:/data/:ro"
    depends_on:
      otp_init:
        condition: service_completed_successfully
  valhalla_init:
    image: ghcr.io/headwaymaps/valhalla-init:latest
    env_file: .env
    volumes:
      - "valhalla_data:/data/:rw"
      - "./data/:/bootstrap/:ro"
    environment:
      ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.valhalla.tar
      ARTIFACT_LOCK: /data/imported
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
  valhalla:
    image: ghcr.io/headwaymaps/valhalla:latest
    restart: always
    env_file: .env
    volumes:
      - "valhalla_data:/data/:ro"
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    depends_on:
      valhalla_init:
        condition: service_completed_successfully
  nginx_init:
    image: ghcr.io/headwaymaps/headway-init:latest
    env_file: .env
    environment:
      FONT_ARTIFACT_SOURCE_PATH: /bootstrap/fonts.tar
      FONT_ARTIFACT_DEST_PATH: /data/fonts/fonts.tar
      SPRITE_ARTIFACT_SOURCE_PATH: /bootstrap/sprite.tar
      SPRITE_ARTIFACT_DEST_PATH: /data/sprite/sprite.tar
    volumes:
      - "./data/:/bootstrap/:ro"
      - "nginx_data:/data/:rw"
  nginx:
    image: ghcr.io/headwaymaps/headway:latest
    restart: always
    env_file: .env
    environment:
      HEADWAY_RESOLVER: 127.0.0.11
      HEADWAY_FORCE_BBOX: ${HEADWAY_FORCE_BBOX}
      HEADWAY_TILESERVER_URL: http://mbtileserver:8000
      HEADWAY_PELIAS_URL: http://pelias_api:4000
      HEADWAY_VALHALLA_URL: http://valhalla:8002
    ports:
      - "8080:8080"
    volumes:
      - "nginx_data:/data/:ro"
    depends_on:
      - "valhalla"
      - "otp"
      - "pelias_api"
      - "mbtileserver"
  pelias_config_init:
    image: ghcr.io/headwaymaps/pelias-init:latest
    env_file: .env
    environment:
      PELIAS_CONFIG_ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.pelias.json
    command: [ "/bin/bash", "/app/init_config.sh" ]
    volumes:
      - "./data/:/bootstrap/:ro"
      - "pelias_config_data:/config"
  pelias_elastic_init:
    image: ghcr.io/headwaymaps/pelias-init:latest
    env_file: .env
    environment:
      ELASTICSEARCH_ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.elasticsearch.tar
    command: [ "/bin/bash", "/app/init_elastic.sh" ]
    volumes:
      - "./data/:/bootstrap/:ro"
      - "pelias_elasticsearch_data:/usr/share/elasticsearch/data"
  peliasplaceholder_init:
    image: ghcr.io/headwaymaps/pelias-init:latest
    env_file: .env
    environment:
      PLACEHOLDER_ARTIFACT_SOURCE_PATH: /bootstrap/${HEADWAY_AREA}.placeholder.tar
    command: [ "/bin/bash", "/app/init_placeholder.sh" ]
    volumes:
      - "./data/:/bootstrap/:ro"
      - "pelias_placeholder_data:/data/placeholder"
  peliaslibpostal:
    image: pelias/libpostal-service
    restart: always
  pelias_api:
    image: pelias/api:master
    restart: always
    environment:
      PORT: 4000
      PELIAS_CONFIG: /config/pelias.json
    volumes:
      - "pelias_config_data:/config:ro"
    depends_on:
      peliaselasticsearch:
        condition: service_healthy
      pelias_config_init:
        condition: service_completed_successfully
  peliasplaceholder:
    image: pelias/placeholder:master
    restart: always
    environment:
      PORT: 4100
    volumes:
      - "pelias_config_data:/config:ro"
      - "pelias_placeholder_data:/data/placeholder"
    depends_on:
      pelias_config_init:
        condition: service_completed_successfully
      peliasplaceholder_init:
        condition: service_completed_successfully
  peliaselasticsearch:
    image: pelias/elasticsearch:7.16.1
    restart: always
    volumes:
      - "pelias_elasticsearch_data:/usr/share/elasticsearch/data"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add: [ "IPC_LOCK" ]
    depends_on:
      pelias_elastic_init:
        condition: service_completed_successfully
      pelias_config_init:
        condition: service_completed_successfully
    healthcheck:
      test: nc -z localhost 9200
volumes:
  pelias_config_data:
  pelias_placeholder_data:
  pelias_elasticsearch_data:
  mbtileserver_data:
  otp_data:
  valhalla_data:
  nginx_data:
