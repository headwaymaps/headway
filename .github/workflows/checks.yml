name: Build Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  earthly_build:
    name: Run a small build
    runs-on: ubuntu-latest
    steps:
      - uses: earthly/actions-setup@v1
        with:
          # pinning to `latest` requires using the GH API, which causes spurious rate limiting errors
          version: "0.8.4"
      - uses: actions/checkout@v2
      - run: earthly --version
      - run: earthly -P +build --area=Bogota
  www_checks:
    defaults:
      run:
        working-directory: services/frontend/www-app
    name: Frontend checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install --global yarn
      - run: yarn install
      - run: yarn lint
      - run: yarn format-check
      - run: yarn tsc
      - run: yarn test
  travelmux_checks:
    defaults:
      run:
        working-directory: services/travelmux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            services/travelmux/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo fmt --all --check
      - run: cargo clippy --all-features
      - run: cargo test --all-features
      - run: cargo build --release
  gtfout:
    defaults:
      run:
        working-directory: services/gtfs/gtfout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            services/travelmux/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo fmt --all --check
      - run: cargo clippy --all-targets --all-features
      - run: cargo test --all-targets
      - run: cargo build --release
