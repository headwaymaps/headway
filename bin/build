#!/bin/bash -i

set -ex

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

bin_name=$(basename $0)
log_filename="${bin_name}-$(date +%Y-%m-%d-%H:%M:%S).log"
log_dir=/pool1/logs
log_file="${log_dir}/${log_filename}"

function with_log {
  $@ > >(tee -a "${log_file}.out") 2> >(tee -a "${log_file}.err" >&2)
}
CONFIG_DIR="$1"
if [ -z "$CONFIG_DIR" ]; then
    cat <<EOS
$0 must specify build config directory
e.g.
    $0 builds/planet
    $0 builds/seattle
EOS
    exit 1
fi
shift

if [ ! -d "$CONFIG_DIR" ]; then
    cat <<EOS
Config dir "$CONFIG_DIR" doesn't exist
EOS
    exit 1
fi

EARTHLY_ARGS=${@:1}

source "${CONFIG_DIR}/env.sh"

if [ "$HEADWAY_COUNTRIES" = "ALL" ]; then
    HEADWAY_IS_PLANET_BUILD=true
else
    HEADWAY_IS_PLANET_BUILD=false
fi

if [ -f "${CONFIG_DIR}/prebuild.sh" ]; then
    "${CONFIG_DIR}/prebuild.sh"
fi

INPUT_PBF="${HEADWAY_AREA}.osm.pbf"
if [[ $HEADWAY_DOWNLOAD_AREA_PBF ]]; then
    dagger -c "download-pbf ${HEADWAY_AREA} | file | export ${INPUT_PBF}"
fi

if [[ ! -f "${INPUT_PBF}" ]]; then
    echo "Missing input pbf ${INPUT_PBF}"
    exit 1
fi

# TODO: is-planet-build
dagger -c "with-area ${HEADWAY_AREA} | with-local-pbf $INPUT_PBF | build | export data/$HEADWAY_AREA"

bin/build-transit "$CONFIG_DIR" $EARTHLY_ARGS

